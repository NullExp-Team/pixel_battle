{
  "search.exclude": {
    "**/.fvm": true
  },
  "files.watcherExclude": {
    "**/.fvm": true
  },
  "dart.lineLength": 150,
  "[dart]": {
    "editor.defaultFormatter": "Dart-Code.dart-code",
    "editor.formatOnSave": true,
    "editor.rulers": [
      150
    ],
  },
  "folderTemplates.structures": [
    {
      "name": "Feature Template",
      "structure": [
        {
          "fileName": "domain",
          "template": "EmptyDirectory"
        },
        {
          "fileName": "presentation",
          "template": "EmptyDirectory"
        },
        {
          "fileName": "presentation/controller",
          "template": "EmptyDirectory"
        },
        {
          "fileName": "presentation/view",
          "template": "EmptyDirectory"
        },
        {
          "fileName": "presentation/controller/<FTName | replace('_screen', '')&snakecase>_controller.dart",
          "template": "Controller"
        },
        {
          "fileName": "presentation/view/widgets",
          "template": "EmptyDirectory"
        },
        {
          "fileName": "presentation/view/<FTName | replace('_screen', '')&snakecase>_screen.dart",
          "template": "Screen"
        },
      ]
    },
    {
      "name": "Presentation Feature Template",
      "structure": [
        {
          "fileName": "controller",
          "template": "EmptyDirectory"
        },
        {
          "fileName": "view",
          "template": "EmptyDirectory"
        },
        {
          "fileName": "controller/<FTName | replace('_screen', '')&snakecase>_controller.dart",
          "template": "Controller"
        },
        {
          "fileName": "view/widgets",
          "template": "EmptyDirectory"
        },
        {
          "fileName": "view/<FTName | replace('_screen', '')&snakecase>_screen.dart",
          "template": "Screen"
        },
      ]
    }
  ],
  "folderTemplates.fileTemplates": {
    "Controller": [
      "import 'package:core/core.dart';",
      "",
      "part '<FTName | replace('_screen', '')&snakecase>_controller.freezed.dart';",
      "part '<FTName | replace('_screen', '')&snakecase>_controller.g.dart';",
      "",
      "@freezed",
      "class <FTName | replace('_screen', '')&pascalcase>ControllerState with _$<FTName | replace('_screen', '')&pascalcase>ControllerState {",
      "  factory <FTName | replace('_screen', '')&pascalcase>ControllerState() = _<FTName | replace('_screen', '')&pascalcase>ControllerState;",
      "}",
      "",
      "@Riverpod()",
      "class <FTName | replace('_screen', '')&pascalcase>Controller",
      "    extends _$<FTName | replace('_screen', '')&pascalcase>Controller with ControllerMixin {",
      "  @override",
      "  <FTName | replace('_screen', '')&pascalcase>ControllerState build() => <FTName | replace('_screen', '')&pascalcase>ControllerState();",
      "}",
    ],
    "Screen": [
      "import 'package:core/core.dart';",
      "import 'package:flutter/material.dart';",
      "",
      "@RoutePage()",
      "class <FTName | replace('_screen', '')&pascalcase>Screen extends HookConsumerWidget {",
      "  const <FTName | replace('_screen', '')&pascalcase>Screen({super.key});",
      "",
      "  @override",
      "  Widget build(BuildContext context, WidgetRef ref) {",
      "    return Scaffold(",
      "      appBar: AppBar(),",
      "      body: const Center(",
      "        child: Text('<FTName | replace('_screen', '')&pascalcase>Screen'),",
      "      ),",
      "    );",
      "  }",
      "}",
    ]
  },
  "C_Cpp_Runner.cCompilerPath": "gcc",
  "C_Cpp_Runner.cppCompilerPath": "g++",
  "C_Cpp_Runner.debuggerPath": "gdb",
  "C_Cpp_Runner.cStandard": "",
  "C_Cpp_Runner.cppStandard": "",
  "C_Cpp_Runner.msvcBatchPath": "C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Auxiliary/Build/vcvarsall.bat",
  "C_Cpp_Runner.useMsvc": false,
  "C_Cpp_Runner.warnings": [
    "-Wall",
    "-Wextra",
    "-Wpedantic",
    "-Wshadow",
    "-Wformat=2",
    "-Wcast-align",
    "-Wconversion",
    "-Wsign-conversion",
    "-Wnull-dereference"
  ],
  "C_Cpp_Runner.msvcWarnings": [
    "/W4",
    "/permissive-",
    "/w14242",
    "/w14287",
    "/w14296",
    "/w14311",
    "/w14826",
    "/w44062",
    "/w44242",
    "/w14905",
    "/w14906",
    "/w14263",
    "/w44265",
    "/w14928"
  ],
  "C_Cpp_Runner.enableWarnings": true,
  "C_Cpp_Runner.warningsAsError": false,
  "C_Cpp_Runner.compilerArgs": [],
  "C_Cpp_Runner.linkerArgs": [],
  "C_Cpp_Runner.includePaths": [],
  "C_Cpp_Runner.includeSearch": [
    "*",
    "**/*"
  ],
  "C_Cpp_Runner.excludeSearch": [
    "**/build",
    "**/build/**",
    "**/.*",
    "**/.*/**",
    "**/.vscode",
    "**/.vscode/**"
  ],
  "C_Cpp_Runner.useAddressSanitizer": false,
  "C_Cpp_Runner.useUndefinedSanitizer": false,
  "C_Cpp_Runner.useLeakSanitizer": false,
  "C_Cpp_Runner.showCompilationTime": false,
  "C_Cpp_Runner.useLinkTimeOptimization": false
}